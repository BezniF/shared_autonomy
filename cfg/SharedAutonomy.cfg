#!/usr/bin/env python
PACKAGE = "shared_autonomy"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

######################
### General Config ###
######################

group_general = gen.add_group("General")

group_general.add("SIM", bool_t, 0,
        "Use Gazebo Sim", True)

group_general.add("NO_TANK_", bool_t, 0,
        "Enable/Disable the Energy Tank", False)

group_general.add("SINGLE_TANK_", bool_t, 0,
        "Use Single/ Multiple Tank", False)

group_general.add("DELAYED_INPUTS_", bool_t, 0,
        "Add delay in the communication channel", False)

group_general.add("DELAY_TIME" , double_t, 0,
        "Value of the delay in the communication channel [sec]", 0.75, 0.0, 2.0)

tank_group = gen.add_group("Tank")
tank_group.add("reset_tank", bool_t, 0,
        "Reset tank", False)

tank_group.add("TANK_INITIAL_VALUE", double_t, 0,
        "Initial tank value", 40.0, 0.0, 100.0)

tank_group.add("TANK_MIN_VALUE", double_t, 0,
        "Maximum tank value", 5.0, 0.0, 100.0)

tank_group.add("TANK_MAX_VALUE", double_t, 0,
        "Maximum tank value", 1000.0, 0.0, 100.0)

imp_group = gen.add_group("Impedance")

imp_group.add("K_P", double_t, 0,
        "Spring Stiffness", 20.0, 0.0, 100.0)

imp_group.add("K_D", double_t, 0,
        "Velocity Gain", 10.0, 0.0, 100.0)

imp_group.add("K", double_t, 0,
        "Spring Rest Length Multiplier", 1.0, 0.0, 100.0)

imp_group.add("SIM_X_GAIN", double_t, 0,
        "Sim Gain for Constant X force", 50.0, 0.0, 100.0)

imp_group.add("SIM_Y_GAIN", double_t, 0,
        "Sim Gain for Constant Y force", 5.0, 0.0, 100.0)

imp_group.add("MASS_BOT", double_t, 0,
        "Mass of the agents", 1.0, 0.0, 10.0)

imp_group.add("D", double_t, 0,
        "Environmental Damping", 1.5, 0.0, 5.0)

obs_group = gen.add_group("Obstacles")

obs_group.add("D_MAX_", double_t, 0,
        "Max obstacle distance", 0.9, 0.0, 2.0)

obs_group.add("K_OBS_", double_t, 0,
        "Obstacle repulsive gain", 100.0, 0.0, 250.0)

omega_group = gen.add_group("Omega Master")

omega_group.add("FORCE_GAIN", double_t, 0,
        "Gain for the master-slave force", 5.0, 0.0, 100.0)

omega_group.add("SCALING_FACTOR", double_t, 0,
        "Scaling factor for the force feedback [1 / gain]", 10.0, 0.0, 100.0)

omega_group.add("MAX_FORCE", double_t, 0,
        "Maximum value for the force feedback components", 4.0, 0.0, 20.0)

exit(gen.generate(PACKAGE, "Config", "SharedAutonomy"))
